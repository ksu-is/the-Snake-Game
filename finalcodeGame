import tkinter as tk
import random

class SnakeGame:
    def __init__(self, master):
        self.master = master
        self.master.title("Snake Game")
        self.master.resizable(False, False)

        self.board_width = 300
        self.board_height = 300
        self.canvas = tk.Canvas(self.master, width=self.board_width, height=self.board_height, bg='black')
        self.canvas.pack()

        self.snake = [(50, 50), (50, 50), (50, 50)]  
        self.snake_direction = 'Right'
        self.food = None
        self.is_game_over = False
        self.speed = 75
        self.score = 0

        self.score_label = tk.Label(self.master, text=f"Score: {self.score}", font=('Canvas', 12), fg='yellow', bg='black')
        self.score_label.pack()

        # Bind keys
        self.master.bind("<Left>", lambda event: self.change_direction('Left'))
        self.master.bind("<Right>", lambda event: self.change_direction('Right'))
        self.master.bind("<Up>", lambda event: self.change_direction('Up'))
        self.master.bind("<Down>", lambda event: self.change_direction('Down'))

        # Start the game
        self.create_food()
        self.update_game()

    def create_food(self):
        """Generate random food on the canvas."""
        x = random.randint(0, (self.board_width - 10) // 10) * 10
        y = random.randint(0, (self.board_height - 10) // 10) * 10
        self.food = (x, y)
        self.canvas.create_rectangle(x, y, x + 10, y + 10, fill="blue", tags="food")

    def change_direction(self, direction):
        """Change the direction of the snake."""
        if direction == 'Left' and self.snake_direction != 'Right':
            self.snake_direction = direction
        elif direction == 'Right' and self.snake_direction != 'Left':
            self.snake_direction = direction
        elif direction == 'Up' and self.snake_direction != 'Down':
            self.snake_direction = direction
        elif direction == 'Down' and self.snake_direction != 'Up':
            self.snake_direction = direction

    def move_snake(self):
        """Move the snake by one step."""
        head_x, head_y = self.snake[0]

        if self.snake_direction == 'Left':
            head_x -= 10
        elif self.snake_direction == 'Right':
            head_x += 10
        elif self.snake_direction == 'Up':
            head_y -= 10
        elif self.snake_direction == 'Down':
            head_y += 10

        new_head = (head_x, head_y)

        if new_head == self.food:
            self.snake = [new_head] + self.snake
            self.canvas.delete("food")
            self.create_food()
            self.score += 10  
            self.update_score()

        else:
            self.snake = [new_head] + self.snake[:-1]

    def check_collisions(self):
        """Check if the snake collides with the wall or itself."""
        head_x, head_y = self.snake[0]

        if head_x < 0 or head_x >= self.board_width or head_y < 0 or head_y >= self.board_height:
            return True

        if (head_x, head_y) in self.snake[1:]:
            return True

        return False

    def update_score(self):
        """Update the score label."""
        self.score_label.config(text=f"Score: {self.score}")

    def update_game(self):
        """Update the game state and redraw the canvas."""
        if self.is_game_over:
            self.canvas.create_text(self.board_width // 2, self.board_height // 2, text="Game Over", fill="red", font=('Arial', 16))
            return

        self.move_snake()

        if self.check_collisions():
            self.is_game_over = True
            self.update_game()
            return

        self.canvas.delete("snake")
        for segment in self.snake:
            self.canvas.create_rectangle(segment[0], segment[1], segment[0] + 10, segment[1] + 10, fill="green", tags="snake")

        self.canvas.create_rectangle(self.food[0], self.food[1], self.food[0] + 10, self.food[1] + 10, fill="red", tags="food")

        self.master.after(self.speed, self.update_game)

if __name__ == "__main__":
    root = tk.Tk()
    game = SnakeGame(root)
    root.mainloop()